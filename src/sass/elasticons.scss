$icon-dimension: 48px;
$stroke-width: 5px;
$radius: $stroke-width / 2;
$color: #fff;

$drawingZone: round($icon-dimension * 2 / 3);
$margin: floor(($icon-dimension - $drawingZone) / 2);
$diagCoeff: 1.414213562; /* sqrt(2) = 1,414213562 */
@mixin transition {
  transition: transform 0.4s cubic-bezier(0.70, -0.5, 0.25, 1.5),
              width 0.4s cubic-bezier(0.70, -0.5, 0.25, 1.5),
              height 0.4s cubic-bezier(0.70, -0.5, 0.25, 1.5),
              border-radius 0.4s cubic-bezier(0.70, -0.5, 0.25, 1.5),
              box-shadow 0.4s ease,
              opacity 0.2s ease;
}

.elasticon {
  width: $icon-dimension;
  height: $icon-dimension;
  overflow: hidden;
  color: transparent;
  position: relative;
  cursor: pointer;
  border: none;

  span {
      transform: translate3d(0 ,0, 0) rotate(0deg);
      border-radius: 0;

    &,
    &::before,
    &::after {
      position: absolute;
      top: 0;
      left: 0;
      height: 0;
      width: 0;
      border: ($stroke-width / 2) solid $color;
      border-radius: $radius;
      display: block;
      opacity: 1;
      box-shadow: inset 0 0 $stroke-width rgba($color, 0);
      @include transition;
    }

    &::before,
    &::after {
      content: "";
      display: block;
    }
  }
}

.elasticon.elasticon-hamburger {

  span {
    transform: translate3d($margin, $margin, 0);

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      transform: translate3d(($stroke-width / -2), ($icon-dimension / 3 - $stroke-width), 0);
      opacity: 1;
    }

    &::after {
      transform: translate3d(($stroke-width / -2), ($icon-dimension * 2 / 3 - 1.5 * $stroke-width), 0);
    }
  }
}

.elasticon.elasticon-plus {

  span {
    transform: translate3d(($margin), (($icon-dimension - $stroke-width) / 2), 0) rotate(0deg);

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      transform: translate3d(($stroke-width / -2), ($stroke-width / -2), 0) rotate(-90deg);
    }
  }
}

.elasticon.elasticon-cross {

  span {
    transform: translate3d(($margin - (($diagCoeff - 1) * ($drawingZone - $stroke-width) / 2)), (($icon-dimension - $stroke-width) / 2), 0) rotate(45deg);

    &,
    &::before,
    &::after {
      width: ($drawingZone - $stroke-width) * $diagCoeff;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      transform: translate3d(($stroke-width / -2), ($stroke-width / -2), 0) rotate(-90deg);
    }
  }
}

.elasticon.elasticon-play {

  span {
    transform: translate3d(($margin), ($margin - $stroke-width / 4 + $drawingZone / 4), 0) rotate(30deg);

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      transform: translate3d((($drawingZone - $stroke-width) / -4 - $stroke-width / 2), (($drawingZone - $stroke-width) * 0.866025404 / 2 - $stroke-width / 2), 0) rotate(60deg); /* cos30° = 0,866025404 */
      opacity: 1;
    }

    &::after {
      transform: translate3d((($drawingZone - $stroke-width) / 4 - $stroke-width / 2), (($drawingZone - $stroke-width) * 0.866025404 / 2 - $stroke-width / 2), 0) rotate(-60deg);
    }
  }
}

.elasticon.elasticon-reverse {

  span {
    transform: translate3d($margin, ($margin + $drawingZone / 4 - $stroke-width / 4), 0) rotate(-30deg);

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      transform: translate3d((($drawingZone - $stroke-width) / -4 - $stroke-width / 2), (($drawingZone - $stroke-width) * 0.866025404 / 2 - $stroke-width / 2), 0) rotate(60deg); /* cos30° = 0,866025404 */
      opacity: 1;
    }

    &::after {
      transform: translate3d((($drawingZone - $stroke-width) / 4 - $stroke-width / 2), (($drawingZone - $stroke-width) * 0.866025404 / 2 - $stroke-width / 2), 0) rotate(-60deg);
    }
  }
}

.elasticon.elasticon-chevron-left {

  span {
    transform: translate3d((($icon-dimension - $drawingZone * $diagCoeff / 2 - $stroke-width / 2) / 2), ($drawingZone / 2 - .25 * $stroke-width), 0) rotate(-45deg);

    &,
    &::before,
    &::after {
      width: ($drawingZone - $stroke-width) * $diagCoeff / 2;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      transform: translate3d((($drawingZone - $stroke-width) * $diagCoeff / -4 - $stroke-width / 2), (($drawingZone - $stroke-width) * $diagCoeff / 4 - $stroke-width / 2), 0) rotate(-90deg);
    }
  }
}

.elasticon.elasticon-chevron-right {

  span {
    transform: translate3d((($icon-dimension - $drawingZone * $diagCoeff / 2 - $stroke-width / 2) / 2), ($drawingZone / 2 - .25 * $stroke-width), 0) rotate(45deg);

    &,
    &::before,
    &::after {
      width: ($drawingZone - $stroke-width) * $diagCoeff / 2;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      transform: translate3d((($drawingZone - $stroke-width) * $diagCoeff / 4 - $stroke-width / 2), (($drawingZone - $stroke-width) * $diagCoeff / 4 - $stroke-width / 2), 0) rotate(-270deg);
    }
  }
}

.elasticon.elasticon-tick {

  span {
    transform: translate3d(($margin - (2 - $diagCoeff) * (($drawingZone - $stroke-width) * 0.409977611) / 4), (($icon-dimension - $stroke-width) / 2), 0) rotate(60deg);
    width: ($drawingZone - $stroke-width) * 0.409977611;

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      transform: translate3d(($stroke-width / -2), (($drawingZone - $stroke-width) * -0.409977611 + $stroke-width / -2), 0) rotate(-90deg);
      width: ($drawingZone - $stroke-width) * 0.819955221;
    }
  }
}

.elasticon.elasticon-square {

  span {
    transform: translate3d($margin, $margin, 0) rotate(0deg);
    height : $drawingZone - $stroke-width;
    box-shadow: inset ($stroke-width / 2) 0 0 $color,
                inset 0 ($stroke-width / 2) 0 $color,
                inset ($stroke-width / -2) 0 0 $color,
                inset 0 ($stroke-width / -2) 0 $color;

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      opacity: 0;
      width: 0;
    }
  }
}

.elasticon.elasticon-circle {

  span {
    transform: translate3d($margin, $margin, 0) rotate(0deg);
    height : $drawingZone - $stroke-width;
    box-shadow: inset ($stroke-width / 2) 0 0 $color,
                inset 0 ($stroke-width / 2) 0 $color,
                inset ($stroke-width / -2) 0 0 $color,
                inset 0 ($stroke-width / -2) 0 $color;
    border-radius: $drawingZone / 2;

    &,
    &::before,
    &::after {
      width: $drawingZone - $stroke-width;
    }

    &::before {
      opacity: 0;
      width: 0;
    }

    &::after {
      opacity: 0;
      width: 0;
    }
  }
}